{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","components/LinkDirect.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Navigation.js","serviceWorker.js","index.js","App.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","src","icon","maxWidth","alt","LinkDirect","activeClass","to","spy","smooth","offset","duration","title","console","log","TitleSection","state","color","changeColor","setState","data","sections","name","onMouseOver","onMouseLeave","subtitle","Object","keys","links","map","key","url","icons","down","AboutSection","items","p","content","SkillCard","skill","image","SkillSection","up","Navigation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"88CAGqBA,G,uLACT,IACAC,EAAaC,KAAKC,MAAlBF,SACR,OACE,yBACEG,UAAS,mBAAcF,KAAKC,MAAMC,YAEjCH,O,GAP6BI,cCuBvBC,EAxBE,SAAAH,GACf,OACE,yBACEI,QAASJ,EAAMI,QACfC,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,SAChBC,aAAc,QACdC,UAAW,sBAGb,yBACEC,IAAKZ,EAAMa,KACXR,MAAO,CACLS,SAAU,QAEZC,IAAI,OCdSC,E,iLAEjB,OACE,kBAAC,OAAD,CACEC,YAAY,SACZC,GAAInB,KAAKC,MAAMkB,GACfC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,KAEY,aAArBvB,KAAKC,MAAMuB,MACV,kBAAC,EAAD,CAAUV,KAAMd,KAAKC,MAAMa,KAAMT,QAAS,kBAAMoB,QAAQC,IAAI,OAE5D1B,KAAKC,MAAMuB,W,GAdmBrB,aCInBwB,G,iNACnBC,MAAQ,CACNC,MAAO,S,EAETC,YAAc,SAAAD,GACZ,EAAKE,SAAS,CACZF,MAAOA,K,wEAGD,IAAD,OACP,OACE,yBAAM3B,UAAY8B,EAAKC,SAAS,GAAG/B,WAClC,kBAAC,UAAD,CAASgC,KAAK,OAAOhC,UAAU,YAC9B,kBAAC,EAAD,CAAUA,UAAU,SAClB,wBACEA,UAAU,QACViC,YAAa,kBAAM,EAAKL,YAAY,WACpCxB,MAAO,CAAEuB,MAAO7B,KAAK4B,MAAMC,OAC3BO,aAAc,kBAAM,EAAKN,YAAY,WAEpCE,EAAKR,OAER,6BACE,4BAAKQ,EAAKK,WAEZ,yBAAKnC,UAAU,iBACZoC,OAAOC,KAAKP,EAAKQ,OAAOC,KAAI,SAAAC,GAC3B,OACE,yBAAKxC,UAAU,QACb,kBAAC,aAAD,CAAYyC,IAAKX,EAAKQ,MAAME,WAMtC,kBAAC,EAAD,CAAYvB,GAAG,QAAQK,MAAM,WAAWV,KAAMkB,EAAKY,MAAMC,OACzD,kBAAC,UAAD,CAASX,KAAK,QAAQhC,UAAU,iB,GApCEC,cCDrB2C,G,uLAEjB,OACE,6BACE,kBAAC,EAAD,CAAU5C,UAAU,UAClB,4BAAK8B,EAAKC,SAAS,GAAGT,OACtB,yBAAKtB,UAAU,cACZ8B,EAAKC,SAAS,GAAGc,MAAMN,KAAI,SAAAO,GAC1B,OAAO,2BAAIA,EAAEC,cAInB,kBAAC,EAAD,CAAY9B,GAAG,QAAQK,MAAM,WAAWV,KAAMkB,EAAKY,MAAMC,OACzD,kBAAC,UAAD,CAASX,KAAK,QAAQhC,UAAU,iB,GAbEC,cCNrB+C,G,uLACT,IACAC,EAAUnD,KAAKC,MAAfkD,MACR,OACE,yBAAKjD,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKW,IAAKsC,EAAMF,QAAQG,MAAOpC,IAAI,MAErC,yBAAKd,UAAU,uBACb,4BAAKiD,EAAMF,QAAQzB,a,GATUrB,cCMlBkD,G,uLAEjB,OACE,6BACE,kBAAC,EAAD,CAAUnD,UAAU,SAClB,4BAAK8B,EAAKC,SAAS,GAAGT,OACtB,yBAAKtB,UAAU,iBACZ8B,EAAKC,SAAS,GAAGc,MAAMN,KAAI,SAAAU,GAC1B,OAAO,kBAAC,EAAD,CAAWA,MAAOA,SAI/B,kBAAC,EAAD,CAAYhC,GAAG,OAAOK,MAAM,WAAWV,KAAMkB,EAAKY,MAAMU,U,GAZtBnD,cCFrBoD,G,uLAKjB,OACE,yBAAKrD,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAYiB,GAAG,QAAQK,MAAM,WAE/B,yBAAKtB,UAAU,kBACb,kBAAC,EAAD,CAAYiB,GAAG,QAAQK,MAAM,YAGjC,yBAAKtB,UAAU,aACb,yBAAKA,UAAU,iBAAiBG,QAAS,WAb7C2B,EAAKC,SAAS,GAAG/B,UAA0C,eAA9B8B,EAAKC,SAAS,GAAG/B,UAA2B,cAAc,eAanF,wB,GAhB8BC,c,MCKpBqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCGD,WACb,OACE,6BAGE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SDXU,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b92a772a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./fullpage.css\";\r\n\r\nexport default class Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div\r\n        className={`fullpage ${this.props.className}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst DownIcon = props => {\r\n  return (\r\n    <div\r\n      onClick={props.onClick}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginBottom: \"-34px\",\r\n        transform: \"translateY(-45px)\"\r\n      }}\r\n    >\r\n      <img\r\n        src={props.icon}\r\n        style={{\r\n          maxWidth: \"30px\"\r\n        }}\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport data from \"../data.json\";\r\nimport DownIcon from \"./DownIcon\";\r\n\r\nexport default class LinkDirect extends Component {\r\n  render() {\r\n    return (\r\n      <Link\r\n        activeClass=\"active\"\r\n        to={this.props.to}\r\n        spy={true}\r\n        smooth={true}\r\n        offset={50}\r\n        duration={500}\r\n      >\r\n        {this.props.title === \"downIcon\" ? (\r\n          <DownIcon icon={this.props.icon} onClick={() => console.log(\"\")} />\r\n        ) : (\r\n          this.props.title\r\n        )}\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport LinkDirect from \"../components/LinkDirect\";\r\n\r\nimport \"./TitleSection.css\";\r\n\r\nexport default class TitleSection extends Component {\r\n  state = {\r\n    color: \"white\",\r\n  };\r\n  changeColor = color => {\r\n    this.setState({\r\n      color: color\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div  className={ data.sections[0].className}>\r\n       <Element name=\"home\" className=\"element\" />\r\n        <Fullpage className=\"first\">\r\n          <h1\r\n            className=\"title\"\r\n            onMouseOver={() => this.changeColor(\"yellow\")}\r\n            style={{ color: this.state.color }}\r\n            onMouseLeave={() => this.changeColor(\"white\")}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <LinkDirect to=\"about\" title=\"downIcon\" icon={data.icons.down}/>\r\n        <Element name=\"about\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport LinkDirect from \"../components/LinkDirect\";\r\n\r\nimport \"./AboutSection.css\";\r\n\r\nexport default class AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <h3>{data.sections[0].title}</h3>\r\n          <div className=\"paragraphs\">\r\n            {data.sections[0].items.map(p => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <LinkDirect to=\"skill\" title=\"downIcon\" icon={data.icons.down}/>\r\n        <Element name=\"skill\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./skillcard.css\";\r\n\r\nexport default class SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport LinkDirect from \"../components/LinkDirect\";\r\n\r\nimport \"./SkillSection.css\";\r\n\r\nexport default class SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"third\">\r\n          <h3>{data.sections[1].title}</h3>\r\n          <div className=\"cards-wrapper\">\r\n            {data.sections[1].items.map(skill => {\r\n              return <SkillCard skill={skill} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <LinkDirect to=\"home\" title=\"downIcon\" icon={data.icons.up} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport data from \"../data.json\";\r\nimport LinkDirect from \"./LinkDirect\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nexport default class Navigation extends Component {\r\n  render() {\r\n    var changeColorTemplate=function() {\r\n      data.sections[0].className = data.sections[0].className ===\"firstClass\" ?\"secondClass\":\"firstClass\";\r\n    };\r\n    return (\r\n      <div className=\"navigation\">\r\n        <div className=\"floatRight\">\r\n          <div className=\"navigationItem\">\r\n            <LinkDirect to=\"about\" title=\"about\" />\r\n          </div>\r\n          <div className=\"navigationItem\">\r\n            <LinkDirect to=\"skill\" title=\"skill\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"floatLeft\">\r\n          <div className=\"navigationItem\" onClick={() => changeColorTemplate()}>\r\n            changeTamplate\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Navigation from \"./components/Navigation\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div>\n      {/* <StickyContainer>\n         <Sticky>{({ style }) => }</Sticky> */}\n      <Navigation />\n      <TitleSection />\n      <AboutSection />\n      <SkillSection />\n      {/*  </StickyContainer> */}\n    </div>\n  );\n}\n"],"sourceRoot":""}